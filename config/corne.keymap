/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        tab_app_forward: tab_app_forward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LG(TAB)>, <&macro_release>;

            label = "TAB_APP_FORWARD";
        };

        tab_app_backward: tab_app_backward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LG(LS(TAB))>, <&macro_release>;

            label = "TAB_APP_BACKWARD";
        };
    };

    behaviors {
        lh_pht: lh_pht {
            compatible = "zmk,behavior-hold-tap";
            label = "LH_PHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <18 19 20 21 22 6 7 8 9 10 30 31 32 33 34>;
            flavor = "tap-unless-interrupted";
        };

        rh_pht: rh_pht {
            compatible = "zmk,behavior-hold-tap";
            label = "RH_PHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q               &kp W                 &kp E                   &kp R           &kp T        &kp Y          &kp U           &kp I                    &kp O                  &kp P                   &trans
&trans  &lh_pht LEFT_ALT A  &lh_pht LEFT_SHIFT S  &lh_pht LEFT_CONTROL D  &lh_pht LCMD F  &kp G        &kp H          &rh_pht LCMD J  &rh_pht RIGHT_CONTROL K  &rh_pht RIGHT_SHIFT L  &rh_pht RIGHT_ALT SEMI  &trans
&trans  &kp Z               &kp X                 &kp C                   &kp V           &kp B        &kp N          &kp M           &kp COMMA                &kp DOT                &kp FSLH                &trans
                                                  &kp ESCAPE              &mo 1           &kp SPACE    &kp BACKSPACE  &mo 2           &kp RET
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1       &kp N2        &kp N3        &kp N4        &kp N5          &kp N6            &kp N7           &kp N8          &kp N9            &kp N0  &trans
&trans  &kp LS(TAB)  &kp TAB       &trans        &trans        &bt BT_SEL 4    &kp LEFT          &kp DOWN         &kp UP          &kp RIGHT         &trans  &trans
&trans  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &kp LG(NUMBER_1)  &kp LC(LS(TAB))  &kp LC(TAB)     &kp LG(NUMBER_9)  &trans  &trans
                                   &kp ESCAPE    &trans        &kp SPACE       &kp RGUI          &kp RIGHT_ALT    &kp LEFT_SHIFT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL   &kp AT  &kp HASH        &kp DLLR      &kp PRCNT    &kp CARET      &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &kp TILDE  &trans  &trans          &trans        &trans       &kp MINUS      &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&trans  &trans     &trans  &trans          &trans        &trans       &kp UNDER      &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &trans
                           &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LGUI     &kp BACKSPACE  &trans     &kp RET
            >;
        };
    };
};
